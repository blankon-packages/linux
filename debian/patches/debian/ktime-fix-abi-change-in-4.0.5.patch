From: Ben Hutchings <ben@decadent.org.uk>
Date: Tue, 16 Jun 2015 16:36:28 +0100
Subject: ktime: Fix ABI change in 4.0.5
Forwarded: not-needed

Commit f7bcb70ebae0 ("ktime: Fix ktime_divns to do signed division")
changed the return type of __ktime_divns() from u64 to s64.  As this
is not called directly but only by an inline function which has had
the same type change, it is safe to revert the change to
__ktime_divns() and add casts.  (Actually, we could rely on
implicit conversions but it seems better to be explicit.)

--- a/include/linux/ktime.h
+++ b/include/linux/ktime.h
@@ -166,7 +166,7 @@ static inline bool ktime_before(const kt
 }
 
 #if BITS_PER_LONG < 64
-extern s64 __ktime_divns(const ktime_t kt, s64 div);
+extern u64 __ktime_divns(const ktime_t kt, s64 div);
 static inline s64 ktime_divns(const ktime_t kt, s64 div)
 {
 	/*
@@ -181,7 +181,7 @@ static inline s64 ktime_divns(const ktim
 		do_div(tmp, div);
 		return ns < 0 ? -tmp : tmp;
 	} else {
-		return __ktime_divns(kt, div);
+		return (s64)__ktime_divns(kt, div);
 	}
 }
 #else /* BITS_PER_LONG < 64 */
--- a/kernel/time/hrtimer.c
+++ b/kernel/time/hrtimer.c
@@ -266,7 +266,7 @@ lock_hrtimer_base(const struct hrtimer *
 /*
  * Divide a ktime value by a nanosecond value
  */
-s64 __ktime_divns(const ktime_t kt, s64 div)
+u64 __ktime_divns(const ktime_t kt, s64 div)
 {
 	int sft = 0;
 	s64 dclc;
@@ -282,7 +282,7 @@ s64 __ktime_divns(const ktime_t kt, s64
 	}
 	tmp >>= sft;
 	do_div(tmp, (unsigned long) div);
-	return dclc < 0 ? -tmp : tmp;
+	return (u64)(dclc < 0 ? -tmp : tmp);
 }
 EXPORT_SYMBOL_GPL(__ktime_divns);
 #endif /* BITS_PER_LONG >= 64 */
